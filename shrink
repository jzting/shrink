#!/usr/bin/ruby
  
YUI_COMPRESSOR_PATH = "~/Desktop/shrink/yuicompressor-2.4.6.jar"
HTML_COMPRESSOR_PATH = "~/Desktop/shrink/htmlcompressor-1.5.2.jar"
JS_PATTERN = /<script .+??src="(.*\.js)".+??><\/script>/i
CSS_PATTERN = /href="(.*\.css)/i
UNCOMPRESSED_JS_PATTERN = /<!-- BEGIN: Uncompressed JS -->.*<!-- END: Uncompressed JS -->/m
UNCOMPRESSED_CSS_PATTERN = /<!-- BEGIN: Uncompressed CSS -->.*<!-- END: Uncompressed CSS -->/m

def colorize(text, color_code); "#{color_code}#{text}\e[0m" end
def red(text); colorize(text, "\e[31m"); end
def green(text); colorize(text, "\e[32m"); end
def cyan(text); colorize(text, "\e[36m"); end

begin
  index_file = File.open(ARGV[0], "r")
rescue 
  p "Usage: shrink inputfile.html outputfile.html"
  exit 1
end

puts green("Compressing files...")

index_file_contents = index_file.read
index_file.close

js_files = []
css_files = []
compressed_js = ""
compressed_css = ""

index_file_contents.each_line do |line|
  js_matches = line.match(JS_PATTERN)
  css_matches = line.match(CSS_PATTERN)
  js_files << js_matches[1] if js_matches
  css_files << css_matches[1] if css_matches
end

# compress js and css
js_files.each do |js_file|
  puts cyan(" #{js_file}")
  # if external, fetch resource
  if js_file.match(/https?:\/\/[\S]+/)
    js_file_contents = `curl --silent #{js_file}`
  else
    begin
      js_file = File.open(js_file, "r")
      js_file_contents = js_file.read
    rescue
      puts red(" Error opening #{js_file}")
    end
  end

  compressed_js += IO.popen("java -jar #{YUI_COMPRESSOR_PATH} --type js", "w+") do |pipe|
    pipe.puts js_file_contents
    pipe.close_write
    pipe.read
  end
end

css_files.each do |css_file|
  puts cyan(" #{css_file}")
  # if external, fetch resource
  if css_file.match(/https?:\/\/[\S]+/)
    css_file_contents = `curl --silent #{css_file}`
  else
    begin
      css_file = File.open(css_file, "r")
      css_file_contents = css_file.read
    rescue
      puts red(" Error opening #{css_file}")
    end
  end
  
  compressed_css += IO.popen("java -jar #{YUI_COMPRESSOR_PATH} --type css", "w+") do |pipe|
    pipe.puts css_file_contents
    pipe.close_write
    pipe.read
  end
end

# insert compressed js and css inline
index_file_contents = index_file_contents.gsub(UNCOMPRESSED_JS_PATTERN, "<script type=\"text/javascript\">#{compressed_js}</script>")
index_file_contents = index_file_contents.gsub(UNCOMPRESSED_CSS_PATTERN, "<style type=\"text/css\">#{compressed_css}</style>")

# write out to new file
if ARGV[1]
  new_file = ARGV[1]
else 
  new_file = "compressed.html"
end

minified_index_file = File.new("./" + new_file, "w")
minified_index_file.write(index_file_contents)
minified_index_file.close

# minify html
`java -jar #{HTML_COMPRESSOR_PATH} --remove-intertag-spaces --simple-doctype --type html -o #{new_file} #{new_file}`

puts green("Done! Output saved to " + new_file)